# -*- coding: utf-8 -*-
"""preprocessing(cancer_classification).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vDlsLOpVI1d8ikJx3yYQLjzrWiB54UDo
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

df = pd.read_csv('/content/cancer_classification.csv')

df.head(10)

df['mean area'].sort_values().count()

df.describe().transpose()

sns.countplot(x='benign_0__mal_1',data=df,alpha=0.986)

df.corr()

sns.heatmap(df.corr())

X = df.drop('benign_0__mal_1',axis=1).values
y = df['benign_0__mal_1'].values

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.5,random_state=101)

from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler()

X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

X_train

from tensorflow.keras.models import Sequential

from tensorflow.keras.layers import Dense,Dropout

X_train.shape

model = Sequential()
model.add(Dense(30,activation='relu'))
model.add(Dense(15,activation='relu'))
# model.add(Dense(30,activation='relu'))
model.add(Dense(1,activation='sigmoid'))
model.compile(loss='binary_crossentropy',optimizer='adam')

model.fit(x=X_train,y=y_train,epochs=600,validation_data=(X_test,y_test))

losses=pd.DataFrame(model.history.history)

losses.plot()

model = Sequential()
model.add(Dense(30,activation='relu'))
model.add(Dense(15,activation='relu'))
# model.add(Dense(30,activation='relu'))
model.add(Dense(1,activation='sigmoid'))
model.compile(loss='binary_crossentropy',optimizer='adam')

from tensorflow.keras.callbacks import EarlyStopping

early_stop = EarlyStopping(monitor='val_loss',mode='min',verbose=1,patience=25)

model.fit(x=X_train,y=y_train,epochs=600,validation_data=(X_test,y_test),
          callbacks=[early_stop])

model_loss=pd.DataFrame(model.history.history)

model_loss.plot()









